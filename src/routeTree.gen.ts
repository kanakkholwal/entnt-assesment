/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as JobsRouteImport } from './routes/jobs'
import { Route as CandidatesRouteImport } from './routes/candidates'
import { Route as AssessmentsRouteImport } from './routes/assessments'
import { Route as R500RouteImport } from './routes/500'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JobsIndexRouteImport } from './routes/jobs/index'
import { Route as CandidatesIndexRouteImport } from './routes/candidates/index'
import { Route as AssessmentsIndexRouteImport } from './routes/assessments/index'
import { Route as JobsJobIdRouteImport } from './routes/jobs/$jobId'
import { Route as CandidatesIdRouteImport } from './routes/candidates/$id'
import { Route as AssessmentsJobIdRouteImport } from './routes/assessments/$jobId'
import { Route as TakeAssessmentAssessmentIdCandidateIdRouteImport } from './routes/take-assessment.$assessmentId.$candidateId'

const JobsRoute = JobsRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => rootRouteImport,
} as any)
const CandidatesRoute = CandidatesRouteImport.update({
  id: '/candidates',
  path: '/candidates',
  getParentRoute: () => rootRouteImport,
} as any)
const AssessmentsRoute = AssessmentsRouteImport.update({
  id: '/assessments',
  path: '/assessments',
  getParentRoute: () => rootRouteImport,
} as any)
const R500Route = R500RouteImport.update({
  id: '/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsIndexRoute = JobsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => JobsRoute,
} as any)
const CandidatesIndexRoute = CandidatesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CandidatesRoute,
} as any)
const AssessmentsIndexRoute = AssessmentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AssessmentsRoute,
} as any)
const JobsJobIdRoute = JobsJobIdRouteImport.update({
  id: '/$jobId',
  path: '/$jobId',
  getParentRoute: () => JobsRoute,
} as any)
const CandidatesIdRoute = CandidatesIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => CandidatesRoute,
} as any)
const AssessmentsJobIdRoute = AssessmentsJobIdRouteImport.update({
  id: '/$jobId',
  path: '/$jobId',
  getParentRoute: () => AssessmentsRoute,
} as any)
const TakeAssessmentAssessmentIdCandidateIdRoute =
  TakeAssessmentAssessmentIdCandidateIdRouteImport.update({
    id: '/take-assessment/$assessmentId/$candidateId',
    path: '/take-assessment/$assessmentId/$candidateId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/500': typeof R500Route
  '/assessments': typeof AssessmentsRouteWithChildren
  '/candidates': typeof CandidatesRouteWithChildren
  '/jobs': typeof JobsRouteWithChildren
  '/assessments/$jobId': typeof AssessmentsJobIdRoute
  '/candidates/$id': typeof CandidatesIdRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
  '/assessments/': typeof AssessmentsIndexRoute
  '/candidates/': typeof CandidatesIndexRoute
  '/jobs/': typeof JobsIndexRoute
  '/take-assessment/$assessmentId/$candidateId': typeof TakeAssessmentAssessmentIdCandidateIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/500': typeof R500Route
  '/assessments/$jobId': typeof AssessmentsJobIdRoute
  '/candidates/$id': typeof CandidatesIdRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
  '/assessments': typeof AssessmentsIndexRoute
  '/candidates': typeof CandidatesIndexRoute
  '/jobs': typeof JobsIndexRoute
  '/take-assessment/$assessmentId/$candidateId': typeof TakeAssessmentAssessmentIdCandidateIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/500': typeof R500Route
  '/assessments': typeof AssessmentsRouteWithChildren
  '/candidates': typeof CandidatesRouteWithChildren
  '/jobs': typeof JobsRouteWithChildren
  '/assessments/$jobId': typeof AssessmentsJobIdRoute
  '/candidates/$id': typeof CandidatesIdRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
  '/assessments/': typeof AssessmentsIndexRoute
  '/candidates/': typeof CandidatesIndexRoute
  '/jobs/': typeof JobsIndexRoute
  '/take-assessment/$assessmentId/$candidateId': typeof TakeAssessmentAssessmentIdCandidateIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/500'
    | '/assessments'
    | '/candidates'
    | '/jobs'
    | '/assessments/$jobId'
    | '/candidates/$id'
    | '/jobs/$jobId'
    | '/assessments/'
    | '/candidates/'
    | '/jobs/'
    | '/take-assessment/$assessmentId/$candidateId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/500'
    | '/assessments/$jobId'
    | '/candidates/$id'
    | '/jobs/$jobId'
    | '/assessments'
    | '/candidates'
    | '/jobs'
    | '/take-assessment/$assessmentId/$candidateId'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/500'
    | '/assessments'
    | '/candidates'
    | '/jobs'
    | '/assessments/$jobId'
    | '/candidates/$id'
    | '/jobs/$jobId'
    | '/assessments/'
    | '/candidates/'
    | '/jobs/'
    | '/take-assessment/$assessmentId/$candidateId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  R500Route: typeof R500Route
  AssessmentsRoute: typeof AssessmentsRouteWithChildren
  CandidatesRoute: typeof CandidatesRouteWithChildren
  JobsRoute: typeof JobsRouteWithChildren
  TakeAssessmentAssessmentIdCandidateIdRoute: typeof TakeAssessmentAssessmentIdCandidateIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/jobs': {
      id: '/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof JobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/candidates': {
      id: '/candidates'
      path: '/candidates'
      fullPath: '/candidates'
      preLoaderRoute: typeof CandidatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assessments': {
      id: '/assessments'
      path: '/assessments'
      fullPath: '/assessments'
      preLoaderRoute: typeof AssessmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/500': {
      id: '/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof R500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs/': {
      id: '/jobs/'
      path: '/'
      fullPath: '/jobs/'
      preLoaderRoute: typeof JobsIndexRouteImport
      parentRoute: typeof JobsRoute
    }
    '/candidates/': {
      id: '/candidates/'
      path: '/'
      fullPath: '/candidates/'
      preLoaderRoute: typeof CandidatesIndexRouteImport
      parentRoute: typeof CandidatesRoute
    }
    '/assessments/': {
      id: '/assessments/'
      path: '/'
      fullPath: '/assessments/'
      preLoaderRoute: typeof AssessmentsIndexRouteImport
      parentRoute: typeof AssessmentsRoute
    }
    '/jobs/$jobId': {
      id: '/jobs/$jobId'
      path: '/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof JobsJobIdRouteImport
      parentRoute: typeof JobsRoute
    }
    '/candidates/$id': {
      id: '/candidates/$id'
      path: '/$id'
      fullPath: '/candidates/$id'
      preLoaderRoute: typeof CandidatesIdRouteImport
      parentRoute: typeof CandidatesRoute
    }
    '/assessments/$jobId': {
      id: '/assessments/$jobId'
      path: '/$jobId'
      fullPath: '/assessments/$jobId'
      preLoaderRoute: typeof AssessmentsJobIdRouteImport
      parentRoute: typeof AssessmentsRoute
    }
    '/take-assessment/$assessmentId/$candidateId': {
      id: '/take-assessment/$assessmentId/$candidateId'
      path: '/take-assessment/$assessmentId/$candidateId'
      fullPath: '/take-assessment/$assessmentId/$candidateId'
      preLoaderRoute: typeof TakeAssessmentAssessmentIdCandidateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AssessmentsRouteChildren {
  AssessmentsJobIdRoute: typeof AssessmentsJobIdRoute
  AssessmentsIndexRoute: typeof AssessmentsIndexRoute
}

const AssessmentsRouteChildren: AssessmentsRouteChildren = {
  AssessmentsJobIdRoute: AssessmentsJobIdRoute,
  AssessmentsIndexRoute: AssessmentsIndexRoute,
}

const AssessmentsRouteWithChildren = AssessmentsRoute._addFileChildren(
  AssessmentsRouteChildren,
)

interface CandidatesRouteChildren {
  CandidatesIdRoute: typeof CandidatesIdRoute
  CandidatesIndexRoute: typeof CandidatesIndexRoute
}

const CandidatesRouteChildren: CandidatesRouteChildren = {
  CandidatesIdRoute: CandidatesIdRoute,
  CandidatesIndexRoute: CandidatesIndexRoute,
}

const CandidatesRouteWithChildren = CandidatesRoute._addFileChildren(
  CandidatesRouteChildren,
)

interface JobsRouteChildren {
  JobsJobIdRoute: typeof JobsJobIdRoute
  JobsIndexRoute: typeof JobsIndexRoute
}

const JobsRouteChildren: JobsRouteChildren = {
  JobsJobIdRoute: JobsJobIdRoute,
  JobsIndexRoute: JobsIndexRoute,
}

const JobsRouteWithChildren = JobsRoute._addFileChildren(JobsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  R500Route: R500Route,
  AssessmentsRoute: AssessmentsRouteWithChildren,
  CandidatesRoute: CandidatesRouteWithChildren,
  JobsRoute: JobsRouteWithChildren,
  TakeAssessmentAssessmentIdCandidateIdRoute:
    TakeAssessmentAssessmentIdCandidateIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
